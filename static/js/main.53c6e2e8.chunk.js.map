{"version":3,"sources":["slides/home/style.module.scss","slides/style.module.scss","slides/home/index.js","slides/home/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slide","nav","i","height","window","innerHeight","scrollPosition","props","index","console","log","scroll","align","this","img","alt","className","styles","src","details","style","position","left","slideStyles","target","href","marginLeft","class","onClick","React","Component","Contact","App","state","fetch","then","result","json","data","setState","slides","map","x","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,GAAK,kBAAkB,cAAc,2BAA2B,IAAM,mBAAmB,QAAU,uBAAuB,WAAa,0BAA0B,QAAU,yB,qBCAxND,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,WAAa,4B,sOCG3FC,E,2MACLC,IAAM,SAACC,GAAD,OAAO,WACZ,IAAIC,EAASC,OAAOC,YAChBC,GAAkB,EAAKC,MAAMC,MAAMN,GAAGC,EAC1CM,QAAQC,IAAIJ,GACZF,OAAOO,OAAO,CACb,SAAY,SACZ,IAAOL,M,wEAKR,IAAIM,EAAQC,KAAKN,MAAMC,MAAM,GAAK,EAAI,OAAQ,QAC1CM,EAAMD,KAAKN,MAAMC,MAAM,GAAK,EAC/B,yBAAKO,IAAI,aAAaC,UAAWC,IAAM,GAAQC,IAAKL,KAAKN,MAAMY,QAAX,WAAkCC,MAAO,CAAC,KAAQ,SACtG,yBAAKL,IAAI,aAAaC,UAAWC,IAAM,GAAQC,IAAKL,KAAKN,MAAMY,QAAX,WAAkCC,MAAO,CAAC,MAAS,SACpGC,EAAWR,KAAKN,MAAMC,MAAM,GAAK,EAAG,CAACc,KAAM,MAAQ,CAAC,MAAS,MACjE,OACC,yBAAKN,UAAWO,IAAW,MAAY,IAAMN,IAAM,KAAUG,MAAO,CAAC,UAAaR,IAChFE,EACD,yBAAKE,UAAWC,IAAM,SACrB,4BAAKJ,KAAKN,MAAMY,QAAX,UACL,4BAAKN,KAAKN,MAAMY,QAAX,OACL,2BAAIN,KAAKN,MAAMY,QAAX,MACJ,6BACA,uBAAGK,OAAO,QAAQC,KAAMZ,KAAKN,MAAMY,QAAX,MAA6BN,KAAKN,MAAMY,QAAQ,aAAxE,IAAsF,uBAAGC,MAAO,CAACM,WAAY,QAASC,MAAM,wBAE7H,yBAAKP,MAAOC,EAAUL,UAAWC,IAAO,gBACvC,uBAAGD,UAAW,kBAAoBC,IAAM,IAAUW,QAASf,KAAKZ,KAAK,KACrE,uBAAGe,UAAW,oBAAsBC,IAAM,IAAUW,QAASf,KAAKZ,IAAI,W,GA7BvD4B,IAAMC,WCApBC,E,iLAEJ,OACC,yBAAKf,UAAWO,IAAW,MAAY,IAAMN,IAAM,MAClD,yBAAKD,UAAWC,IAAM,SACrB,uBAAGQ,KAAK,sGAAsGD,OAAO,QAAQR,UAAWC,IAAM,SAA9I,oB,GALiBY,IAAMC,WCgCbE,E,YA7Bd,WAAYzB,GAAO,IAAD,8BACjB,4CAAMA,KACD0B,MAAQ,CAACd,QAAS,IAFN,E,iFAKE,IAAD,OAClBe,MAAM,iBACLC,MAAK,SAAAC,GACL,OAAOA,EAAOC,UAEdF,MAAK,SAACG,GACN,EAAKC,SAAS,CAACpB,QAASmB,S,+BAKzB,IAAIE,EAAS3B,KAAKoB,MAAMd,QAAQsB,KAAI,SAACC,EAAGxC,GACvC,OAAO,kBAAC,EAAD,CAAOiB,QAASuB,EAAGlC,MAAON,OAElC,OACC,yBAAKc,UAAU,OACbwB,EACD,kBAAC,EAAD,MACA,uBAAGf,KAAK,IAAIT,UAAU,SAAtB,U,GAxBca,IAAMC,WCMJa,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,kB","file":"static/js/main.53c6e2e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__16GSd\",\"bg\":\"style_bg__1_Ymn\",\"nav-buttons\":\"style_nav-buttons__MSRdT\",\"nav\":\"style_nav__3j3tq\",\"section\":\"style_section__1_8lj\",\"profilePic\":\"style_profilePic__2z0tr\",\"contact\":\"style_contact__3EAKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide\":\"style_slide__11wii\",\"leftAlign\":\"style_leftAlign__2NJOP\",\"rightAlign\":\"style_rightAlign__BRkus\"};","import React from 'react';\nimport slideStyles from 'slides/style.module.scss';\nimport styles from './style.module.scss';\n\nclass Slide extends React.Component {\n\tnav = (i) => () =>{\n\t\tvar height = window.innerHeight;\n\t\tvar scrollPosition = (this.props.index+i)*height;\n\t\tconsole.log(scrollPosition);\n\t\twindow.scroll({\n\t\t\t'behavior': 'smooth',\n\t\t\t'top': scrollPosition\n\t\t});\n\t}\n\n\trender(){\n\t\tvar align = this.props.index%2 == 0 ? \"left\": \"right\";\n\t\tvar img = this.props.index%2 == 0 ?\n\t\t\t<img alt=\"background\" className={styles[\"bg\"]} src={this.props.details['background']} style={{\"left\": \"50%\"}}/>:\n\t\t\t<img alt=\"background\" className={styles[\"bg\"]} src={this.props.details['background']} style={{\"right\": \"50%\"}}/>;\n\t\tvar position = this.props.index%2 == 0? {left: \"0%\"} : {\"right\": \"0%\"};\n\t\treturn (\n\t\t\t<div className={slideStyles[\"slide\"] + \" \" + styles[\"home\"]} style={{'textAlign': align}}>\n\t\t\t\t{img}\n\t\t\t\t<div className={styles[\"section\"]}>\n\t\t\t\t\t<h2>{this.props.details['subtitle']}</h2>\n\t\t\t\t\t<h1>{this.props.details['title']}</h1>\n\t\t\t\t\t<p>{this.props.details['text']}</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<a target=\"black\" href={this.props.details['link']}>{this.props.details['link-text']} <i style={{marginLeft: \"30px\"}} class=\"fa fa-arrow-right\"></i></a>\n\t\t\t\t</div>\n\t\t\t\t<div style={position} className={styles[\"nav-buttons\"]}>\n\t\t\t\t\t<i className={\"fa fa-arrow-up \" + styles[\"nav\"] } onClick={this.nav(-1)}></i>\n\t\t\t\t\t<i className={\"fa fa-arrow-down \" + styles[\"nav\"] } onClick={this.nav(1)}></i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { Slide };\n","import React from 'react';\nimport slideStyles from 'slides/style.module.scss';\nimport styles from './style.module.scss';\n\nclass Contact extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className={slideStyles[\"slide\"] + \" \" + styles[\"home\"]}>\n\t\t\t\t<div className={styles[\"section\"]}>\n\t\t\t\t\t<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSe7jwCuEkEFIj-20-XscrFvKd1PDipUOs5y0CYc7J15Bf98tQ/viewform\" target=\"blank\" className={styles[\"contact\"]}>Contact Me</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { Contact };\n","import React from 'react';\nimport './App.css';\n\nimport { Slide } from 'slides/home';\nimport { Contact } from 'slides/home/contact.js';\n\nclass App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {details: []};\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('/details.json')\n\t\t.then(result=>{\n\t\t\treturn result.json();\n\t\t})\n\t\t.then((data)=>{\n\t\t\tthis.setState({details: data});\n\t\t})\n\t}\n\n\trender(){\n\t\tvar slides = this.state.details.map((x, i)=>{\n\t\t\treturn <Slide details={x} index={i}/>\n\t\t})\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{slides}\n\t\t\t\t<Contact />\n\t\t\t\t<a href=\"#\" className=\"badge\">A</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}